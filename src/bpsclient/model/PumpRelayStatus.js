/**
 * BPS
 * Bubble Point System API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PumpRelayStatus model module.
 * @module model/PumpRelayStatus
 * @version 0.1.0
 */
class PumpRelayStatus {
    /**
     * Constructs a new <code>PumpRelayStatus</code>.
     * @alias module:model/PumpRelayStatus
     * @param timestamp {Number} 
     * @param relays {String} status of the indivitual relays
     */
    constructor(timestamp, relays) { 
        
        PumpRelayStatus.initialize(this, timestamp, relays);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, timestamp, relays) { 
        obj['timestamp'] = timestamp;
        obj['relays'] = relays;
    }

    /**
     * Constructs a <code>PumpRelayStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PumpRelayStatus} obj Optional instance to populate.
     * @return {module:model/PumpRelayStatus} The populated <code>PumpRelayStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PumpRelayStatus();

            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
            }
            if (data.hasOwnProperty('relays')) {
                obj['relays'] = ApiClient.convertToType(data['relays'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PumpRelayStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PumpRelayStatus</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PumpRelayStatus.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['relays'] && !(typeof data['relays'] === 'string' || data['relays'] instanceof String)) {
            throw new Error("Expected the field `relays` to be a primitive type in the JSON string but got " + data['relays']);
        }

        return true;
    }


}

PumpRelayStatus.RequiredProperties = ["timestamp", "relays"];

/**
 * @member {Number} timestamp
 */
PumpRelayStatus.prototype['timestamp'] = undefined;

/**
 * status of the indivitual relays
 * @member {String} relays
 */
PumpRelayStatus.prototype['relays'] = undefined;






export default PumpRelayStatus;

